<script>
  // Funzione per aggiornare i dati del sensore
  function updateSensorData() {
    $.ajax({
      url: '/api/sensordata', // La route che restituisce i dati del sensore in formato JSON
      method: 'GET',
      dataType: 'json', // Specifica il tipo di dati che ci si aspetta come risposta
      success: function (data) {
        // Aggiorna il contenuto delle varie colonne con i nuovi dati del sensore
        $('#temperature').text(data.sensorData.temperature);
        $('#pressure').text(data.sensorData.pressure);
        $('#luminosity').text(data.sensorData.luminosity);
        $('#ledstate').text(data.sensorData.ledstate);
        $('#peoplecount').text(data.sensorData.peoplecount);
        $('#timestamp').text(data.sensorData.timestamp);

        // Aggiorna la lista degli utenti dentro la stanza
        var usersInsideHtml = '';
        data.usersInside.forEach(function (user) {
          usersInsideHtml += '<p>' + user.user_tag + '</p><br>';
          const timestamp = new Date(user.timestamp * 1000);
          const formattedTimestamp = `${timestamp.getDate()}/${timestamp.getMonth() + 1}/${timestamp.getFullYear()} ${timestamp.getHours()}:${timestamp.getMinutes()}:${timestamp.getSeconds()}`;

          usersInsideHtml += '<p>' + moment(formattedTimestamp).format("DD/MM/YYYY HH:mm:ss") + '</p>';
        });
        $('#userTags').html(usersInsideHtml);
      },
      error: function (xhr, status, error) {
        console.error('Errore durante il recupero dei dati del sensore:', error);
      }
    });
  }

  // Esegui la funzione di aggiornamento all'avvio della pagina
  updateSensorData();

  // Esegui la funzione di aggiornamento ogni 10 secondi
  setInterval(updateSensorData, 2000);
</script>


<div class="container">
  <div class="row">
    <!-- Div dei sensori allineato a sinistra (col-sm-6) -->
    <div class="col-sm-6">
      <div id="sensorDataContainer">
        <div class="row">
          <div class="col-sm-3">
            <h6 class="mb-0">Temperatura:</h6>
          </div>
          <div class="col-sm-9 text-secondary" id="temperature">
            {{sensorData.temperature}}
          </div>
        </div>
        <div class="row">
          <div class="col-sm-3">
            <h6 class="mb-0">Pressione:</h6>
          </div>
          <div class="col-sm-9 text-secondary" id="pressure">
            {{sensorData.pressure}}
          </div>
        </div>
        <div class="row">
          <div class="col-sm-3">
            <h6 class="mb-0">Luminosit√†:</h6>
          </div>
          <div class="col-sm-9 text-secondary" id="luminosity">
            {{sensorData.luminosity}}
          </div>
        </div>
        <div class="row">
          <div class="col-sm-3">
            <h6 class="mb-0">LED State:</h6>
          </div>
          <div class="col-sm-9 text-secondary" id="ledstate">
            {{sensorData.ledstate}}
          </div>
        </div>
        <div class="row">
          <div class="col-sm-3">
            <h6 class="mb-0">People Count:</h6>
          </div>
          <div class="col-sm-9 text-secondary" id="peoplecount">
            {{sensorData.peoplecount}}
          </div>
        </div>
        <div class="row">
          <div class="col-sm-3">
            <h6 class="mb-0">Timestamp:</h6>
          </div>
          <div class="col-sm-9 text-secondary" id="timestamp">
            {{sensorData.timestamp}}
          </div>
        </div>
      </div>
    </div>

<!-- Div degli utenti allineato a destra (col-sm-6) -->
    <div class="col-sm-6 text-right">
      <div class="row">
        <div class="col-sm-3">
          <h6 class="mb-0">Utenti nella stanza:</h6>
        </div>
        <div class="col-sm-9 text-secondary" id="userTags">
          {{#each user_data}}
            <p>{{ this.user_tag }}</p>
            <br>
            <p>{{this.timestamp}}</p>
          {{/each}}
        </div>
      </div>
    </div>
  </div>
</div>